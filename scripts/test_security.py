#!/usr/bin/env python
"""
Script para probar el sistema de seguridad contra fuerza bruta
"""
import requests
import time

def test_brute_force_protection():
    """Probar protecci√≥n contra fuerza bruta"""
    
    login_url = "http://127.0.0.1:8000/accounts/login/"
    
    print("üî¨ Probando protecci√≥n contra fuerza bruta...")
    print(f"URL de prueba: {login_url}")
    
    # Datos de login incorrectos
    bad_credentials = {
        'username': 'fake_user',
        'password': 'wrong_password'
    }
    
    try:
        session = requests.Session()
        
        # Obtener token CSRF
        print("1. Obteniendo token CSRF...")
        response = session.get(login_url)
        
        if 'csrftoken' in session.cookies:
            csrf_token = session.cookies['csrftoken']
        else:
            print("‚ùå No se pudo obtener token CSRF")
            return
        
        bad_credentials['csrfmiddlewaretoken'] = csrf_token
        
        print("2. Enviando m√∫ltiples intentos fallidos...")
        
        for attempt in range(7):  # Intentar 7 veces (m√°s del l√≠mite de 5)
            print(f"   Intento {attempt + 1}...")
            
            response = session.post(login_url, data=bad_credentials)
            
            print(f"   Status: {response.status_code}")
            
            if response.status_code == 429:
                print("‚úÖ ¬°BLOQUEADO! El sistema detect√≥ el ataque")
                print("   La IP fue bloqueada correctamente")
                break
            elif "bloqueado" in response.text.lower():
                print("‚úÖ ¬°BLOQUEADO! P√°gina de bloqueo mostrada")
                break
            
            time.sleep(1)  # Esperar 1 segundo entre intentos
        
        else:
            print("‚ö†Ô∏è  No se detect√≥ bloqueo. Verifica la configuraci√≥n.")
    
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        print("   Aseg√∫rate de que el servidor est√© corriendo en 127.0.0.1:8000")

if __name__ == "__main__":
    test_brute_force_protection()