# Generated by Django 5.2.2 on 2025-08-06 13:08

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('real_estate_projects', '0013_rename_m2m_field'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_whatsapp', models.CharField(help_text='Número de WhatsApp del cliente en formato internacional', max_length=20, unique=True)),
                ('nombre', models.CharField(help_text='Nombre del cliente', max_length=100)),
                ('apellido', models.CharField(blank=True, help_text='Apellido del cliente', max_length=100)),
                ('email', models.EmailField(blank=True, help_text='Email del cliente', max_length=254)),
                ('cedula', models.CharField(blank=True, help_text='Cédula o documento de identidad', max_length=20, null=True, unique=True)),
                ('fecha_nacimiento', models.DateField(blank=True, help_text='Fecha de nacimiento', null=True)),
                ('domicilio', models.CharField(blank=True, help_text='Dirección del domicilio', max_length=255)),
                ('latitud', models.DecimalField(blank=True, decimal_places=8, help_text='Latitud de la ubicación', max_digits=10, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=8, help_text='Longitud de la ubicación', max_digits=11, null=True)),
                ('origen', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('referido', 'Referido'), ('publicidad', 'Publicidad'), ('feria', 'Feria'), ('telefono', 'Teléfono'), ('web', 'Página Web'), ('otro', 'Otro')], default='whatsapp', help_text='Origen del cliente', max_length=20)),
                ('etiquetas', models.TextField(blank=True, help_text='Etiquetas o categorías del cliente (JSON)')),
                ('fecha_primera_asignacion', models.DateTimeField(blank=True, help_text='Fecha de la primera asignación', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el cliente está activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TipoPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del tipo de pago (ej: efectivo, crédito directo)', max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del tipo de pago')),
                ('requiere_entidad_financiera', models.BooleanField(default=False, help_text='Indica si requiere entidad financiera')),
                ('requiere_evaluacion_crediticia', models.BooleanField(default=False, help_text='Indica si requiere evaluación crediticia')),
                ('dias_financiamiento', models.IntegerField(default=0, help_text='Días de financiamiento disponibles')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el tipo de pago está activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Pago',
                'verbose_name_plural': 'Tipos de Pago',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='WhatsAppConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number_id', models.CharField(help_text='ID del número de teléfono de WhatsApp Business', max_length=100, unique=True)),
                ('business_account_id', models.CharField(help_text='ID de la cuenta comercial de WhatsApp', max_length=100)),
                ('whatsapp_business_account_id', models.CharField(blank=True, help_text='ID de la cuenta de WhatsApp Business', max_length=100, null=True)),
                ('access_token', models.CharField(help_text='Token de acceso para la API de WhatsApp', max_length=500)),
                ('app_secret', models.CharField(blank=True, help_text='Secreto de la aplicación de Facebook', max_length=100)),
                ('webhook_verify_token', models.CharField(help_text='Token de verificación del webhook', max_length=100)),
                ('webhook_url', models.URLField(help_text='URL del webhook para recibir mensajes')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si la configuración está activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuración WhatsApp',
                'verbose_name_plural': 'Configuraciones WhatsApp',
            },
        ),
        migrations.CreateModel(
            name='Conversacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_whatsapp', models.CharField(help_text='Número de WhatsApp de la conversación', max_length=20)),
                ('estado', models.CharField(choices=[('abierta', 'Abierta'), ('cerrada', 'Cerrada'), ('archivada', 'Archivada')], default='abierta', help_text='Estado de la conversación', max_length=20)),
                ('ultimo_mensaje_at', models.DateTimeField(blank=True, help_text='Fecha del último mensaje', null=True)),
                ('mensajes_no_leidos', models.IntegerField(default=0, help_text='Número de mensajes no leídos')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si la conversación está activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.OneToOneField(help_text='Cliente de la conversación', on_delete=django.db.models.deletion.CASCADE, related_name='conversacion', to='communications.cliente')),
            ],
            options={
                'verbose_name': 'Conversación',
                'verbose_name_plural': 'Conversaciones',
                'ordering': ['-ultimo_mensaje_at'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origen', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('referido', 'Referido'), ('publicidad', 'Publicidad'), ('feria', 'Feria'), ('telefono', 'Teléfono'), ('web', 'Página Web'), ('otro', 'Otro')], default='whatsapp', help_text='Origen del lead', max_length=20)),
                ('prioridad', models.CharField(choices=[('alta', 'Alta'), ('media', 'Media'), ('baja', 'Baja')], default='media', help_text='Prioridad del lead', max_length=10)),
                ('interes_inicial', models.TextField(blank=True, help_text='Descripción del interés inicial')),
                ('notas', models.TextField(blank=True, help_text='Notas adicionales sobre el lead')),
                ('fecha_primera_interaccion', models.DateTimeField(auto_now_add=True, help_text='Fecha de la primera interacción')),
                ('fecha_ultima_interaccion', models.DateTimeField(auto_now=True, help_text='Fecha de la última interacción')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el lead está activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(help_text='Cliente que genera el lead', on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='communications.cliente')),
                ('inmueble', models.ForeignKey(help_text='Inmueble de interés', on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='real_estate_projects.inmueble')),
            ],
            options={
                'verbose_name': 'Lead',
                'verbose_name_plural': 'Leads',
                'ordering': ['-fecha_ultima_interaccion'],
            },
        ),
        migrations.CreateModel(
            name='AsignacionLead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_asignacion', models.CharField(choices=[('automatica', 'Automática'), ('manual', 'Manual'), ('reasignacion', 'Reasignación')], default='automatica', help_text='Tipo de asignación', max_length=20)),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True, help_text='Fecha de asignación')),
                ('fecha_reasignacion', models.DateTimeField(blank=True, help_text='Fecha de reasignación', null=True)),
                ('motivo_reasignacion', models.TextField(blank=True, help_text='Motivo de la reasignación')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si la asignación está activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asignado_por', models.ForeignKey(help_text='Usuario que realizó la asignación', on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones_realizadas', to=settings.AUTH_USER_MODEL)),
                ('reasignado_por', models.ForeignKey(blank=True, help_text='Usuario que realizó la reasignación', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reasignaciones_realizadas', to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(help_text='Lead asignado', on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to='communications.lead')),
            ],
            options={
                'verbose_name': 'Asignación de Lead',
                'verbose_name_plural': 'Asignaciones de Leads',
                'ordering': ['-fecha_asignacion'],
            },
        ),
        migrations.CreateModel(
            name='Mensaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whatsapp_message_id', models.CharField(help_text='ID del mensaje en WhatsApp', max_length=100, unique=True)),
                ('tipo', models.CharField(choices=[('text', 'Texto'), ('image', 'Imagen'), ('audio', 'Audio'), ('video', 'Video'), ('document', 'Documento'), ('location', 'Ubicación'), ('template', 'Plantilla'), ('interactive', 'Interactivo')], default='text', help_text='Tipo de mensaje', max_length=20)),
                ('direccion', models.CharField(choices=[('incoming', 'Entrante'), ('outgoing', 'Saliente')], help_text='Dirección del mensaje', max_length=20)),
                ('contenido', models.TextField(blank=True, help_text='Contenido del mensaje')),
                ('media_url', models.URLField(blank=True, help_text='URL del archivo multimedia')),
                ('media_type', models.CharField(blank=True, help_text='Tipo de archivo multimedia', max_length=50)),
                ('estado', models.CharField(choices=[('enviado', 'Enviado'), ('entregado', 'Entregado'), ('leido', 'Leído'), ('error', 'Error')], default='enviado', help_text='Estado del mensaje', max_length=20)),
                ('timestamp_whatsapp', models.DateTimeField(help_text='Timestamp del mensaje de WhatsApp')),
                ('fecha_lectura', models.DateTimeField(blank=True, help_text='Fecha de lectura del mensaje', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversacion', models.ForeignKey(help_text='Conversación a la que pertenece el mensaje', on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='communications.conversacion')),
                ('enviado_por', models.ForeignKey(blank=True, help_text='Usuario que envió el mensaje', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mensajes_enviados', to=settings.AUTH_USER_MODEL)),
                ('leido_por', models.ForeignKey(blank=True, help_text='Usuario que leyó el mensaje', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mensajes_leidos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mensaje',
                'verbose_name_plural': 'Mensajes',
                'ordering': ['-timestamp_whatsapp'],
            },
        ),
        migrations.CreateModel(
            name='ProcesoVenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_proceso', models.CharField(help_text='Código único del proceso de venta', max_length=50, unique=True)),
                ('estado', models.CharField(choices=[('prospecto', 'Prospecto'), ('calificado', 'Calificado'), ('propuesta', 'Propuesta'), ('negociacion', 'Negociación'), ('cerrado_ganado', 'Cerrado - Ganado'), ('cerrado_perdido', 'Cerrado - Perdido'), ('pausado', 'Pausado')], default='prospecto', help_text='Estado actual del proceso', max_length=20)),
                ('etapa', models.CharField(choices=[('contacto_inicial', 'Contacto Inicial'), ('presentacion_producto', 'Presentación del Producto'), ('visita_inmueble', 'Visita al Inmueble'), ('propuesta_comercial', 'Propuesta Comercial'), ('negociacion_precio', 'Negociación de Precio'), ('evaluacion_credito', 'Evaluación de Crédito'), ('firma_contrato', 'Firma de Contrato'), ('entrega_inmueble', 'Entrega del Inmueble')], default='contacto_inicial', help_text='Etapa actual del proceso', max_length=30)),
                ('fecha_inicio', models.DateField(auto_now_add=True, help_text='Fecha de inicio del proceso')),
                ('fecha_cierre', models.DateField(blank=True, help_text='Fecha de cierre del proceso', null=True)),
                ('valor_inmueble', models.DecimalField(decimal_places=2, help_text='Valor original del inmueble', max_digits=15)),
                ('valor_negociado', models.DecimalField(blank=True, decimal_places=2, help_text='Valor final negociado', max_digits=15, null=True)),
                ('descuento', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Descuento aplicado', max_digits=15)),
                ('entidad_financiera', models.CharField(blank=True, help_text='Entidad financiera (si aplica)', max_length=200)),
                ('evaluacion_crediticia', models.CharField(blank=True, help_text='Resultado de la evaluación crediticia', max_length=50)),
                ('fecha_evaluacion_credito', models.DateField(blank=True, help_text='Fecha de evaluación crediticia', null=True)),
                ('fecha_promesa_pago', models.DateField(blank=True, help_text='Fecha de promesa de pago', null=True)),
                ('fecha_firma_contrato', models.DateField(blank=True, help_text='Fecha de firma del contrato', null=True)),
                ('fecha_entrega_inmueble', models.DateField(blank=True, help_text='Fecha de entrega del inmueble', null=True)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones del proceso')),
                ('motivo_perdida', models.TextField(blank=True, help_text='Motivo de pérdida (si aplica)')),
                ('probabilidad_cierre', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Probabilidad de cierre (%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('proxima_accion', models.CharField(blank=True, help_text='Próxima acción planificada', max_length=200)),
                ('fecha_proxima_accion', models.DateField(blank=True, help_text='Fecha de la próxima acción', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el proceso está activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(help_text='Cliente comprador', on_delete=django.db.models.deletion.CASCADE, related_name='procesos_venta', to='communications.cliente')),
                ('inmueble', models.ForeignKey(help_text='Inmueble que se está vendiendo', on_delete=django.db.models.deletion.CASCADE, related_name='procesos_venta', to='real_estate_projects.inmueble')),
                ('lead', models.ForeignKey(blank=True, help_text='Lead que originó el proceso (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procesos_venta', to='communications.lead')),
                ('tipo_pago', models.ForeignKey(help_text='Tipo de pago seleccionado', on_delete=django.db.models.deletion.PROTECT, related_name='procesos_venta', to='communications.tipopago')),
            ],
            options={
                'verbose_name': 'Proceso de Venta',
                'verbose_name_plural': 'Procesos de Venta',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_cita', models.CharField(choices=[('reunion', 'Reunión'), ('visita_inmueble', 'Visita al Inmueble'), ('presentacion', 'Presentación'), ('firma', 'Firma de Contrato'), ('entrega', 'Entrega de Inmueble'), ('seguimiento', 'Seguimiento'), ('otro', 'Otro')], help_text='Tipo de cita', max_length=20)),
                ('subtipo_cita', models.CharField(choices=[('presencial', 'Presencial'), ('virtual', 'Virtual'), ('telefonica', 'Telefónica'), ('whatsapp', 'WhatsApp')], default='presencial', help_text='Subtipo de cita', max_length=20)),
                ('fecha_cita', models.DateTimeField(help_text='Fecha y hora de la cita')),
                ('duracion_estimada', models.IntegerField(default=60, help_text='Duración estimada en minutos')),
                ('ubicacion', models.CharField(blank=True, help_text='Ubicación de la cita', max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción de la cita')),
                ('estado', models.CharField(choices=[('programada', 'Programada'), ('confirmada', 'Confirmada'), ('realizada', 'Realizada'), ('cancelada', 'Cancelada'), ('reprogramada', 'Reprogramada')], default='programada', help_text='Estado de la cita', max_length=20)),
                ('resultado', models.CharField(blank=True, choices=[('exitoso', 'Exitoso'), ('parcial', 'Parcial'), ('no_exitoso', 'No Exitoso'), ('no_asistio', 'No Asistió')], help_text='Resultado de la cita', max_length=20)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones de la cita')),
                ('recordatorio_enviado', models.BooleanField(default=False, help_text='Indica si se envió recordatorio')),
                ('fecha_recordatorio', models.DateTimeField(blank=True, help_text='Fecha del recordatorio', null=True)),
                ('numero_encuentro', models.IntegerField(default=1, help_text='Número de encuentro con el cliente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cita_padre', models.ForeignKey(blank=True, help_text='Cita padre (para seguimientos)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='citas_seguimiento', to='communications.cita')),
                ('inmueble', models.ForeignKey(blank=True, help_text='Inmueble a mostrar', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='real_estate_projects.inmueble')),
                ('cliente', models.ForeignKey(help_text='Cliente de la cita', on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='communications.cliente')),
                ('lead', models.ForeignKey(blank=True, help_text='Lead asociado a la cita', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='communications.lead')),
                ('proceso_venta', models.ForeignKey(blank=True, help_text='Proceso de venta asociado', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='communications.procesoventa')),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
                'ordering': ['-fecha_cita'],
            },
        ),
        migrations.CreateModel(
            name='SeguimientoLead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_actividad', models.CharField(choices=[('llamada', 'Llamada'), ('whatsapp', 'WhatsApp'), ('email', 'Email'), ('reunion', 'Reunión'), ('visita', 'Visita'), ('propuesta', 'Propuesta'), ('seguimiento', 'Seguimiento'), ('otro', 'Otro')], help_text='Tipo de actividad realizada', max_length=20)),
                ('descripcion', models.TextField(help_text='Descripción de la actividad')),
                ('fecha_actividad', models.DateTimeField(help_text='Fecha y hora de la actividad')),
                ('resultado', models.CharField(choices=[('exitoso', 'Exitoso'), ('pendiente', 'Pendiente'), ('no_respuesta', 'No Respuesta'), ('no_interesado', 'No Interesado'), ('reprogramar', 'Reprogramar')], help_text='Resultado de la actividad', max_length=20)),
                ('proxima_accion', models.CharField(blank=True, help_text='Próxima acción planificada', max_length=200)),
                ('fecha_proxima_accion', models.DateTimeField(blank=True, help_text='Fecha de la próxima acción', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lead', models.ForeignKey(help_text='Lead al que pertenece el seguimiento', on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos', to='communications.lead')),
                ('proceso_venta', models.ForeignKey(blank=True, help_text='Proceso de venta asociado', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos', to='communications.procesoventa')),
                ('usuario', models.ForeignKey(help_text='Usuario que realizó el seguimiento', on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos_realizados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Seguimiento de Lead',
                'verbose_name_plural': 'Seguimientos de Leads',
                'ordering': ['-fecha_actividad'],
            },
        ),
        migrations.CreateModel(
            name='TestMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_destino', models.CharField(help_text='Número de destino para pruebas', max_length=20)),
                ('template_name', models.CharField(default='hello_world', help_text='Nombre del template a usar', max_length=100)),
                ('language_code', models.CharField(default='en_US', help_text='Código de idioma', max_length=10)),
                ('mensaje_personalizado', models.TextField(blank=True, help_text='Mensaje personalizado (opcional)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(help_text='Usuario que creó la prueba', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mensaje de Prueba',
                'verbose_name_plural': 'Mensajes de Prueba',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VentaInmutable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_venta', models.CharField(help_text='Código único de la venta', max_length=50, unique=True)),
                ('fecha_venta', models.DateField(help_text='Fecha de la venta')),
                ('valor_final', models.DecimalField(decimal_places=2, help_text='Valor final de la venta', max_digits=15)),
                ('descuento_aplicado', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Descuento aplicado', max_digits=15)),
                ('tipo_pago', models.CharField(help_text='Tipo de pago utilizado', max_length=100)),
                ('entidad_financiera', models.CharField(blank=True, help_text='Entidad financiera utilizada', max_length=200)),
                ('cliente_snapshot', models.JSONField(help_text='Snapshot del cliente al momento de la venta')),
                ('inmueble_snapshot', models.JSONField(help_text='Snapshot del inmueble al momento de la venta')),
                ('vendedor_snapshot', models.JSONField(help_text='Snapshot del vendedor al momento de la venta')),
                ('team_leader_snapshot', models.JSONField(help_text='Snapshot del team leader al momento de la venta')),
                ('equipo_venta_snapshot', models.JSONField(help_text='Snapshot del equipo de venta al momento de la venta')),
                ('comisiones_snapshot', models.JSONField(help_text='Snapshot de las comisiones al momento de la venta')),
                ('ponderadores_aplicados', models.JSONField(help_text='Snapshot de los ponderadores aplicados')),
                ('precio_m2_momento', models.DecimalField(decimal_places=2, help_text='Precio por m2 al momento de la venta', max_digits=10)),
                ('m2_inmueble', models.DecimalField(decimal_places=2, help_text='Metros cuadrados del inmueble', max_digits=10)),
                ('ubicacion_inmueble', models.CharField(help_text='Ubicación del inmueble', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('proceso_venta', models.OneToOneField(help_text='Proceso de venta que generó esta venta', on_delete=django.db.models.deletion.CASCADE, related_name='venta_inmutable', to='communications.procesoventa')),
            ],
            options={
                'verbose_name': 'Venta Inmutable',
                'verbose_name_plural': 'Ventas Inmutables',
                'ordering': ['-fecha_venta'],
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_contrato', models.CharField(help_text='Número único del contrato', max_length=100, unique=True)),
                ('fecha_firma', models.DateField(help_text='Fecha de firma del contrato')),
                ('archivo_contrato', models.FileField(blank=True, help_text='Archivo PDF del contrato', upload_to='contratos/')),
                ('clausulas_especiales', models.TextField(blank=True, help_text='Cláusulas especiales del contrato')),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones del contrato')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('venta_inmutable', models.OneToOneField(help_text='Venta inmutable asociada', on_delete=django.db.models.deletion.CASCADE, related_name='contrato', to='communications.ventainmutable')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
                'ordering': ['-fecha_firma'],
            },
        ),
        migrations.CreateModel(
            name='WebhookDebugMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('incoming', 'Entrante'), ('outgoing', 'Saliente'), ('webhook_event', 'Evento Webhook'), ('test_message', 'Mensaje de Prueba')], help_text='Tipo de mensaje', max_length=20)),
                ('numero_telefono', models.CharField(help_text='Número de teléfono involucrado', max_length=20)),
                ('contenido', models.TextField(help_text='Contenido del mensaje')),
                ('raw_data', models.JSONField(help_text='Datos raw del webhook o API')),
                ('respuesta_api', models.JSONField(blank=True, help_text='Respuesta de la API de WhatsApp', null=True)),
                ('estado', models.CharField(default='received', help_text='Estado del mensaje', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('config_utilizada', models.ForeignKey(blank=True, help_text='Configuración utilizada', null=True, on_delete=django.db.models.deletion.SET_NULL, to='communications.whatsappconfig')),
            ],
            options={
                'verbose_name': 'Mensaje de Debug',
                'verbose_name_plural': 'Mensajes de Debug',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WhatsAppTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del template', max_length=100)),
                ('category', models.CharField(choices=[('marketing', 'Marketing'), ('utility', 'Utility'), ('authentication', 'Authentication')], help_text='Categoría del template', max_length=20)),
                ('language', models.CharField(choices=[('es', 'Español'), ('en', 'Inglés'), ('pt', 'Portugués')], default='es', help_text='Idioma del template', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('approved', 'Aprobado'), ('rejected', 'Rechazado'), ('disabled', 'Deshabilitado')], default='pending', help_text='Estado del template', max_length=20)),
                ('components', models.JSONField(help_text='Componentes del template (JSON)')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el template está activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Usuario que creó el template', on_delete=django.db.models.deletion.CASCADE, related_name='templates_creados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template de WhatsApp',
                'verbose_name_plural': 'Templates de WhatsApp',
                'ordering': ['name'],
                'unique_together': {('name', 'language')},
            },
        ),
        migrations.CreateModel(
            name='CampañaMarketing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre de la campaña', max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción de la campaña')),
                ('tipo', models.CharField(choices=[('promocional', 'Promocional'), ('informativa', 'Informativa'), ('seguimiento', 'Seguimiento'), ('remarketing', 'Remarketing')], help_text='Tipo de campaña', max_length=20)),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('programada', 'Programada'), ('activa', 'Activa'), ('pausada', 'Pausada'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada')], default='borrador', help_text='Estado de la campaña', max_length=20)),
                ('audiencia_objetivo', models.JSONField(help_text='Criterios de audiencia objetivo (JSON)')),
                ('fecha_inicio', models.DateField(help_text='Fecha de inicio de la campaña')),
                ('fecha_fin', models.DateField(blank=True, help_text='Fecha de fin de la campaña', null=True)),
                ('presupuesto', models.DecimalField(blank=True, decimal_places=2, help_text='Presupuesto de la campaña', max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indica si la campaña está activa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Usuario que creó la campaña', on_delete=django.db.models.deletion.CASCADE, related_name='campañas_creadas', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(help_text='Template a utilizar', on_delete=django.db.models.deletion.CASCADE, related_name='campañas', to='communications.whatsapptemplate')),
            ],
            options={
                'verbose_name': 'Campaña de Marketing',
                'verbose_name_plural': 'Campañas de Marketing',
                'ordering': ['-fecha_inicio'],
            },
        ),
    ]
